@using DailyPlanning.Models.WorkItemsViewModel
@using DailyPlanning.Infrastructure.Enums
@model CompleteWorkItemViewModel

@{
    ViewBag.Title = "WorkItems";
}
<h2>Work Items</h2>

<div>
    @Html.ActionLink("Add", "AddWorkItem", "", new { @class = "btn btn-success", @id = "index-add-link-id" })
</div>


<table class="table">
 @using (Html.BeginForm("QuickAddWorkItem", "WorkItem", "" ))
 {
    <tr>
        <td>       
            <button type="submit" class="btn btn-sm btn-success" id="add-create-button-id" title="Quick Add">
                <span class="glyphicon glyphicon-plus"></span>
            </button>
        </td>
        <td >
            @Html.TextBoxFor(model => model.QuickAddWorkItem.Title, htmlAttributes: new { @class = "form-control", @id = "add-title-textbox-id", @placeholder = "Please enter title" , @title = "Please enter title to quick add Work Item" })
            @Html.ValidationMessageFor(model => model.QuickAddWorkItem.Title, "", new { @class = "text-danger" })
        </td>
        <td  >
            @Html.TextBoxFor(model => model.QuickAddWorkItem.Description, htmlAttributes: new { @class = "form-control", @id = "add-quick-description-textbox-id", @placeholder = "Please enter description", @title = "Please enter description to quick add Work Item" })
            @Html.ValidationMessageFor(model => model.QuickAddWorkItem.Description, "", new { @class = "text-danger" })
        </td>

        <td colspan="4">
            <div class="form-group">
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.QuickAddWorkItem.ProjectID, Model.QuickAddWorkItem.ListOfProjectIDs, "Choose a project", htmlAttributes: new { @class = "form-control", @id = "add-quick-project-dropdown-id", @title = "Choose project title" })
                    @Html.ValidationMessageFor(model => model.QuickAddWorkItem.ProjectID, "", new { @class = "text-danger" })
                </div>
            </div>
        </td>
        
    </tr>
} 
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.WorkItems.FirstOrDefault().WorkItemID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkItems.FirstOrDefault().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkItems.FirstOrDefault().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkItems.FirstOrDefault().Status)
        </th>
        <th>
            @Html.Label("", "Project Title")
        </th>
        <th></th>

    </tr>

    @foreach (var item in Model.WorkItems)
    {
        var className = "well";

        if (item.Status == Status.IN_PROGRESS)
        {
            className = "warning";
        }
        else if (item.Status == Status.DONE)
        {
            className = "success";
        }

        <tr class="@className">
            <td>
                @Html.DisplayFor(modelItem => item.WorkItemID)
            </td>
            <td>
                @Html.ActionLink(item.Title, "Details", new { id = item.WorkItemID }, new { @class = "index-details-link-class" })
            </td>
            <td>
                @Html.Raw(item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @if (item.ProjectID == 0)
                {
                    @:-
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.Project.Title)
                }
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.WorkItemID }, new { @class = "index-edit-link-class btn btn-info" })
            </td>
            <td>
                @Html.ActionLink("Delete", "Delete", new { id = item.WorkItemID }, new { @class = "index-delete-link-class delete btn btn-danger" })
            </td>
        </tr>
    }

</table>

<div>
     @Html.Partial("_Paging", Model.Pager) 
</div>


<div id="dialog" title="Confirm delete" hidden>
    <p>Are you sure you want to delete this?</p>
</div>



@section Scripts {
    <script type="text/javascript">
        if (@Model.Pager.CurrentPage == 1 ) {
            $("#first-page-id").addClass('disabled');
            $("#previous-page-id").addClass('disabled');
        }
        if (@Model.Pager.CurrentPage == @Model.Pager.TotalPages)
        {
           $("#next-page-id").addClass('disabled');
             $("#last-page-id").addClass('disabled');
        }
        $("#dialog").hide();
        $(document).ready(function () {
            $(".delete").click(function (e) {
                var url = $(this).attr("href");
                e.preventDefault();
                $("#dialog").dialog({
                    height: 220,
                    width: 475,
                    modal: true,
                    position: {
                        my: "center",
                        at: "center",
                        of: $("body"),
                        within: $("body")
                    },
                    buttons: {
                        "Confirm": {
                            text: "Confirm",
                            id: "confirm-id",
                            click: function () {
                                window.location.href = url;
                            }
                        },
                        "Cancel": function () {
                            $(this).dialog("close");
                        }
                    }
                });
                $('#dialog').parent().position({ my: 'center', of: 'center', collison: 'fit' });
            });
        });
    </script>
}
