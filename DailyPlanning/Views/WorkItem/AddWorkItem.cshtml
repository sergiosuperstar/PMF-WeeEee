@model DailyPlanning.Models.WorkItemsViewModel.AddWorkItemViewModel

@{
    ViewBag.Title = "Add WorkItem";
}

<h2>Add new Work Item</h2>


@using (Html.BeginForm("AddWorkItem", "WorkItem", ""))
{

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, htmlAttributes: new { @class = "form-control", @id = "add-title-textbox-id" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, htmlAttributes : new { @class = "form-control" , @id = "description"  })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control", @id = "add-status-dropdown-id" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.ProjectID != null)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ProjectID, htmlAttributes: new { @class = "form-control",  @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.Label("", "Project Title", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ProjectID, Model.ListOfProjectIDs, string.Empty, htmlAttributes: new { @class = "form-control", @id = "add-project-dropdown-id" })
                        @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" id="add-create-button-id" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        CKEDITOR.replace('description');
    </script>
}
